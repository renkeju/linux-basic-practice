==================================
3.2 管理文件和目录
==================================

在命令行中处理文件和目录
-----------------------------------

在命令行中操作文件系统中的文件和目录时，需要了解如何管理这些文件和目录以及管理文件系统的常用命令。

在 Linux 系统中执行操作时，用户必定在文件系统的某个目录位置中。我们一般将当前所处的目录称为当前目录。下图中“zhangsan”是用户zhangsan的初始目录，下面将其作为的那个前目录进行介绍。

.. image:: /_images/Chapter_3/3-2/3-2-1.目录结构.png
   :align: center

切换目录
^^^^^^^^^^^^^^^^^

cd命令用于在文件系统上切换目录。

.. code:: none
   
   cd [目录]

目录可以是绝对路径，也可以是相对路径。绝对路径从根目录（/）开始，并以斜杠（/）分隔所需目录的路径。此外，相对路径从当前目录，表示所需目录的路径。你可以使用以下目录符号：

.. csv-table:: 目录符号
   :widths: 5 30
   :header: "符号", "说明"

    "~", "初始目录，表示当前执行用户的工作目录。"
    ".", "当前目录，表示当前执行用户的所处的目录。"
    "\.\.", "父目录，以当前目录为准，表示上一级目录。"

在图3-2-1中所示的当前所在路径为用户工作目录“/home/zhangsan”，①②③分别表示切换到不同的目录下。如何使用绝对路径或相对路径切换到相同的路径，参考下表。

.. csv-table:: 指定cd命令的路径
    :widths: 3 15 15
    :header: "编号", "绝对路径", "相对路径"

    "①", "cd /home", "cd .."
    "②", "cd /opt", "cd ../../opt"
    "③", "cd /home/zhangsan/dir_b", "cd dir_b"

除此之外，如果登陆用户为 zhangsan，无论当前在哪个目录下，使用“cd”，“cd ~”，“cd ~zhangsan” 都将切换到用户工作目录“/home/zhangsan”。但是如果zhangsan用户使用命令“cd ~lisi”，也同样可以切换到用户lisi的工作目录下，但是必须拥有用户lisi工作目录的读写权限才可访问。

显示目录路径
^^^^^^^^^^^^^^^^^^^^^^^^^^

pwd命令以绝对路径显示当前用户所处的目录位置。

.. code-block: none

    pwd

查看文件和目录信息
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ls 命令列出文件和目录信息。如果没有指定目录名称，则默认会列出当前目录的内容。

.. code-block:: none

    ls [选项] [目录名...]
    ls [选项] [文件名...]

.. csv-table:: ls 命令选项
    :header: "选项", "说明"
    :widths: 5 40

    "-F", "显示表示文件类型符号：“/”是目录，“*”是可执行文件，“@”是链接符号"
    "-a", "显示隐藏文件（文件名以点“.”开头）"
    "-l", "显示详细信息"
    "-d", "显示当前目录的信息，而不是当前目录下的内容"

.. note:: 由于在使用ls命令时，我们可以指定多个文件或目录，因此上面的命令格式中我们使用“...”来表示多个文件或目录。在之后的内容中也会使用相同的表示方法。

.. code-block:: none

    $ cd /usr ➜ 表示移动到目录/usr
    $ ls ➜ 表示查看目录/usr下的内容
    bin  etc  games  include  lib  lib64  libexec  local  sbin  share  src  tmp

打印文件内容
^^^^^^^^^^^^^^^^^^^^

more 命令打印指定文件的内容。

.. code-block:: none

    more 文件名称

按[Space]键可以显示下一页，并在浏览到文件的最后一页时退出。

逐页查看文件内容
^^^^^^^^^^^^^^^^^^^^^^^^^^^

less命令一额每页为单位显示不能一次性打印在屏幕上的文件。如果不能完全适应屏幕，清按[↑↓]键滚动屏幕。按键操作与 man 命令相同。

.. code-block:: none

    less 文件名称

查看文件内容
^^^^^^^^^^^^^^^^^^^^^^^^^

cat命令可以显示指定名称的文件的内容。如果指定了多个文件，则会连续显示所有文件。此外，使用“-n”选项会在输出时添加行号。

如果执行cat命令时没有指定任何参数，则cat命令将从标准输入（键盘）中读取数据。在键盘中输入一行内容后，按下[Enter]键就会在屏幕上打印出刚刚输入的内容，然后重复进行操作，直到按下[Ctrl+D]结束。

.. code-block:: none

    cat [选项] [文件名称...]

.. csv-table:: cat 命令选项
    :header: "选项", "说明"
    :widths: 5 30

    "-n", "为所有行添加行号"
    "-T", "将制表符显示为“^”"

显示文件内容行首添加行号
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

nl 命令显示带有行号的文件内容。

.. code-block:: none

    nl [选项] [文件名]

也可以使用带有“-n”选项的cat命令输出行号。但是，如果包含空行，则显示内容与nl命令有所不同。``cat -n`` 指定包括空行所有行的行号，而“nl”指定除空行以外的行的行号。

.. code-block:: none

    $ cat -n sample.txt ➜ 使用 cat 命令显示
    1 CentOS
    2 Ubuntu
    3
    4 Mint
    $ nl sample.txt ➜ 使用 nl 命令显示
    1 CentOS
    2 Ubuntu

    3 Mint

创建目录
^^^^^^^^^^^^^^^^

mkdir 命令创建目录。通过在命令参数中指定多个目录名称，可以一次创建多个目录。还可以使用“-p”选项创建路径中包含的目录。

.. code-block:: none

    mkdir [选项] 目录名称...

.. csv-table:: mkdir 命令选项
    :header: "选项", "说明"
    :widths: 10 20

    "-m [访问权限]", "创建具有明确访问权限的目录"
    "-p", "同时创建路径中包含的目录"

.. code-block:: none

    $ mkdir dir_x dir_y ← ❶
    $ ls -l
    总用量 0
    drwxr-xr-x. 2 renkeju renkeju 6  2月 18 13:36 dir_x
    drwxr-xr-x. 2 renkeju renkeju 6  2月 18 13:36 dir_y
    $ mkdir dir_z/sub_z ← ❷
    mkdir: 无法创建目录 “dir_z/sub_z”: 没有那个文件或目录
    $ mkdir -p dir_z/sub_z ← ❸
    $ ls -l
    总用量 0
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_x
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_y
    drwxr-xr-x. 3 renkeju renkeju 19  2月 18 13:37 dir_z ← ❹
    $ cd dir_z/sub_z ← ❺
    $ pwd
    /home/renkeju/dir_z/sub_z

❶ 一次创建多个目录

❷ 与子目录一起创建，但由于未指定“-p”选项而出错

❸ 使用“-p”选项重试

❹ 已创建 ``dir_z/sub_z``

❺ 切换到 ``dir_z/sub_z`` 目录下

创建文件并更改时间戳
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

如果将 touch 命令的参数指定为现有文件名，则会将文件的访问和修改时间更改为 touch 命令的执行时间。此外，如果将参数指定为新文件的名称，则会创建一个新的空文件（大小为0）。

.. code-block:: none

    touch [选项] 文件名称...

.. csv-table:: touch 命令选项
    :header: "选项", "说明"
    :widths: 10, 30

    "-t 时间戳", "这里的时间戳并不是当前的时间格式，需要遵循 ``[[CC]YY]MMDDhhmm[.ss]`` 格式"
    "-a", "仅变更访问日期和时间"
    "-m", "仅变更更新时间"

.. code-block:: none

    $ touch fileA  ← 创建新文件
    $ ls -l
    总用量 0
    -rw-r--r--. 1 renkeju renkeju 0  2月 18 13:48 fileA
    $ more fileA  ← 文件内容为空
    $ touch -t 05130900 fileA  ← 将时间戳变更为5月13日上午9点
    $ ls -l
    总用量 0
    -rw-r--r--. 1 renkeju renkeju 0  5月 13  2020 fileA

移动文件和目录
^^^^^^^^^^^^^^^^^^^^^^^^^^^

mv命令移动文件和目录，将源文件（或目录）移动到作为mv命令的最后一个参数指定的目录中，此外，如果mv命令的最后一个参数指定的目录不存在，请提前创建此目录。

.. code-block:: none

    mv [选项] 源文件名称... 目录目录名称
    mv [选项] 源目录名称... 目标目录名称

.. csv-table:: mv 命令选项
    :header: "选项", "说明"
    :widths: 5 25

    "-i", "如果目标目录中存在同名文件，请确认覆盖"
    "-f", "强制覆盖目标目录中的同名文件"

复制文件和目录
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

要复制文件或目录，请使用cp命令，如果要复制同一个目录或另一个目录的文件，并且要复制到另一个目录中，则源文件和目标文件可以具有相同的名称。您也可以同时复制多个文件。

使用cp命令复制目录时，需要使用“-R”（或“-r”）选项。

.. code-block:: none

    cp [选项] 源文件名称 目标文件名称
    cp [选项] 源文件名称... 目标目录名称
    cp [选项] 源目录名称 目标目录名称

.. csv-table:: cp 命令选项
    :header: "选项", "说明"
    :widths: 5 30

    "-i", "如果目标目录中或目标文件存在同名文件，请确认是否覆盖"
    "-f", "强制覆盖目标目录中或目标文件的同名文件"
    "-p", "复制信息，包括所有者、时间戳和访问权限"
    "-R,-r", "原样复制源目录的层次结构"

.. code-block:: none

    $ cp fileA fileB ← ❶
    $ cp dir_x dir_xx ← ❷
    cp: 未指定 -r；略过目录'dir_x'
    $ cp -r dir_x dir_xx ← ❸
    $ ls -l
    总用量 0
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_x
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 14:15 dir_xx ← ❹
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_y
    drwxr-xr-x. 3 renkeju renkeju 19  2月 18 13:37 dir_z
    -rw-r--r--. 1 renkeju renkeju  0  5月 13  2020 fileA
    -rw-r--r--. 1 renkeju renkeju  0  2月 18 14:15 fileB ← ❺

❶ 复制文件

❷ 尝试复制目录，但由于未指定“-r”选项而出错

❸ 使用“-r”选项重试

❹ 已创建目录“dir_xx”

❺ 步骤❶中创建的“fileB”文件

删除文件和目录
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

使用rm命令删除文件和目录。也可以通过指定多个文件名称一次性删除多个文件。也可以使用“-R”（或“-r”）选项删除目录和目录中的所有文件。还提供rmdir命令删除空目录的命令。

.. code-block:: none

    rm [选项] 文件名称...
    rm [选项] 目录名称...

.. csv-table:: rm 命令选项
    :header: "选项", "说明"
    :widths: 5 30

    "-i", "删除文件前询问用户是否执行操作"
    "-f", "不必询问直接强制删除"
    "-R,-r", "删除指定目录中的所有文件和目录"

.. code-block:: none

    $ rm dir_xx ← ❶
    rm: 无法删除 'dir_xx': 是一个目录
    $ rm -r dir_xx ← ❷
    $ rm fileB ← ❸
    $ ls -l
    总用量 0
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_x
    drwxr-xr-x. 2 renkeju renkeju  6  2月 18 13:36 dir_y
    drwxr-xr-x. 3 renkeju renkeju 19  2月 18 13:37 dir_z
    -rw-r--r--. 1 renkeju renkeju  0  5月 13  2020 fileA

❶ 不带“-r”选项的命令无法删除目录

❷ 可以使用“-r”选项删除目录

❸ 不需要指定选项就可以删除文件

确认文件类型
^^^^^^^^^^^^^^^^^^^^^^^

使用file命令可以确定文件类型。

.. code-block:: none

    a